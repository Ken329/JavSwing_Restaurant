/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package restaurant;
import java.awt.Color;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author ken_0
 */
public class main_page extends javax.swing.JFrame {
    public String item1;
    public String item2;
    public String item3;
    public String item4;
    public String item5;
    public String item6;
    public String item7;
    public String item8;
    public int tb1 = 0;
    public int tb2 = 0;
    public int tb3 = 0;
    public int tb4 = 0;
    public int tb5 = 0;
    public int tb6 = 0;
    public int tb7 = 0;
    public int tb8 = 0;
    public int tb9 = 0;
    public int tb10 = 0;
    public int tb11= 0;
    public int tb12 = 0;
    /**
     * Creates new form main_page
     */
    public main_page() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        t7 = new javax.swing.JLabel();
        t2 = new javax.swing.JLabel();
        t8 = new javax.swing.JLabel();
        t4 = new javax.swing.JLabel();
        t1 = new javax.swing.JLabel();
        t10 = new javax.swing.JLabel();
        t11 = new javax.swing.JLabel();
        t5 = new javax.swing.JLabel();
        t12 = new javax.swing.JLabel();
        t9 = new javax.swing.JLabel();
        t6 = new javax.swing.JLabel();
        t3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        check = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(102, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("My Restaurant");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("X");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        t7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        t7.setText("T7");
        t7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        t7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t7MouseClicked(evt);
            }
        });

        t2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        t2.setText("T2");
        t2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        t2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t2MouseClicked(evt);
            }
        });

        t8.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        t8.setText("T8");
        t8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        t8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t8MouseClicked(evt);
            }
        });

        t4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        t4.setText("T4");
        t4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        t4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t4MouseClicked(evt);
            }
        });

        t1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        t1.setText("T1");
        t1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        t1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t1MouseClicked(evt);
            }
        });

        t10.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        t10.setText("T10");
        t10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        t10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t10MouseClicked(evt);
            }
        });

        t11.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        t11.setText("T11");
        t11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        t11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t11MouseClicked(evt);
            }
        });

        t5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        t5.setText("T5");
        t5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        t5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t5MouseClicked(evt);
            }
        });

        t12.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        t12.setText("T12");
        t12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        t12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t12MouseClicked(evt);
            }
        });

        t9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        t9.setText("T9");
        t9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        t9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t9MouseClicked(evt);
            }
        });

        t6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        t6.setText("T6");
        t6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        t6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t6MouseClicked(evt);
            }
        });

        t3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        t3.setText("T3");
        t3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        t3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t3MouseClicked(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 24, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(0, 255, 0));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 24, Short.MAX_VALUE)
        );

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setText("Ready");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setText("Not Ready");

        check.setBackground(new java.awt.Color(102, 102, 255));
        check.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        check.setText("Admin");
        check.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(t4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(t7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 32, Short.MAX_VALUE)
                                .addComponent(t6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(180, 180, 180)
                                .addComponent(t9, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(t5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(t8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(153, 153, 153)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(t11, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(t10))
                    .addComponent(t12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel16)
                        .addGap(107, 107, 107)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel17)
                        .addGap(230, 230, 230))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(check)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(278, 278, 278))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(check))
                .addGap(65, 65, 65)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(t7)
                            .addComponent(t4)
                            .addComponent(t1)
                            .addComponent(t10))
                        .addGap(67, 67, 67)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(t11)
                            .addComponent(t8)
                            .addComponent(t2)
                            .addComponent(t5))
                        .addGap(67, 67, 67)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(t3)
                            .addComponent(t6)
                            .addComponent(t9)
                            .addComponent(t12))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel17)
                    .addComponent(jLabel16))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void t1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t1MouseClicked
        String active = "on";
        String order = "no";
        try {
            // TODO add your handling code here:
            Connection conn = DriverManager.getConnection("jdbc:derby://localhost:1527/restaurant" , "root", "root");
            Statement st = conn.createStatement();
            if(tb1 == 1){
               ResultSet item = st.executeQuery("select * from my_table where table_no = 't1'");
               if(item.next()){
                   item1 = item.getString(3);
                   item2 = item.getString(4);
                   item3 = item.getString(5);
                   item4 = item.getString(6);
                   item5 = item.getString(7);
                   item6 = item.getString(8);
                   item7 = item.getString(9);
                   item8 = item.getString(10);
               }
               pay p = new pay();
               p.chicken = Double.parseDouble(item1);
               p.sandwish = Double.parseDouble(item2);
               p.cabbonara = Double.parseDouble(item3);
               p.beef = Double.parseDouble(item4);
               p.curry = Double.parseDouble(item5);
               p.dry = Double.parseDouble(item6);
               p.mix = Double.parseDouble(item7);
               p.spicy = Double.parseDouble(item8);
               PreparedStatement ps = conn.prepareStatement("INSERT INTO ROOT.PAYMENT (PAID, TABLE_NO, TOTAL)VALUES (?,?,?)");
               ps.setString(1, "no");
               ps.setString(2, "t1");
               ps.setDouble(3, p.getAmmount());
               if(ps.executeUpdate() > 0){
                   payment_page pp = new payment_page();
                   pp.setVisible(true);
                   dispose();
               }
            }else{
                st.executeUpdate("update my_table set active = '"+active+"', ord = '"+order+"' where table_no = 't1'");
                order_page op = new order_page();
                op.setVisible(true);
                dispose();
            }
        } catch (SQLException ex) {
            Logger.getLogger(main_page.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_t1MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        String ord = null;
        try {
            // TODO add your handling code here:
            Connection conn = DriverManager.getConnection("jdbc:derby://localhost:1527/restaurant" , "root", "root");
            Statement st = conn.createStatement();
            st.executeUpdate("update my_table set active = 'off', ord = '"+ord+"', chicken = '0', sandwish = '0', cabbonara = '0', beef = '0', curry = '0', dry = '0', mix = '0', spicy = '0'");
            System.exit(0);
        } catch (SQLException ex) {
            Logger.getLogger(main_page.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel2MouseClicked

    private void t2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t2MouseClicked
        // TODO add your handling code here:
        String active = "on";
        String order = "no";
        try {
            // TODO add your handling code here:
            Connection conn = DriverManager.getConnection("jdbc:derby://localhost:1527/restaurant" , "root", "root");
            Statement st = conn.createStatement();
            if(tb2 == 1){
               ResultSet item = st.executeQuery("select * from my_table where table_no = 't2'");
               if(item.next()){
                   item1 = item.getString(3);
                   item2 = item.getString(4);
                   item3 = item.getString(5);
                   item4 = item.getString(6);
                   item5 = item.getString(7);
                   item6 = item.getString(8);
                   item7 = item.getString(9);
                   item8 = item.getString(10);
               }
               pay p = new pay();
               p.chicken = Double.parseDouble(item1);
               p.sandwish = Double.parseDouble(item2);
               p.cabbonara = Double.parseDouble(item3);
               p.beef = Double.parseDouble(item4);
               p.curry = Double.parseDouble(item5);
               p.dry = Double.parseDouble(item6);
               p.mix = Double.parseDouble(item7);
               p.spicy = Double.parseDouble(item8);
               PreparedStatement ps = conn.prepareStatement("INSERT INTO ROOT.PAYMENT (PAID, TABLE_NO, TOTAL)VALUES (?,?,?)");
               ps.setString(1, "no");
               ps.setString(2, "t2");
               ps.setDouble(3, p.getAmmount());
               if(ps.executeUpdate() > 0){
                   payment_page pp = new payment_page();
                   pp.setVisible(true);
                   dispose();
               }
            }else{
                st.executeUpdate("update my_table set active = '"+active+"', ord = '"+order+"' where table_no = 't2'");
                order_page op = new order_page();
                op.setVisible(true);
                dispose();
            }
        } catch (SQLException ex) {
            Logger.getLogger(main_page.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_t2MouseClicked

    private void t3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t3MouseClicked
        // TODO add your handling code here:
        String active = "on";
        String order = "no";
        try {
            // TODO add your handling code here:
            Connection conn = DriverManager.getConnection("jdbc:derby://localhost:1527/restaurant" , "root", "root");
            Statement st = conn.createStatement();
            if(tb3  == 1){
               ResultSet item = st.executeQuery("select * from my_table where table_no = 't3'");
               if(item.next()){
                   item1 = item.getString(3);
                   item2 = item.getString(4);
                   item3 = item.getString(5);
                   item4 = item.getString(6);
                   item5 = item.getString(7);
                   item6 = item.getString(8);
                   item7 = item.getString(9);
                   item8 = item.getString(10);
               }
               pay p = new pay();
               p.chicken = Double.parseDouble(item1);
               p.sandwish = Double.parseDouble(item2);
               p.cabbonara = Double.parseDouble(item3);
               p.beef = Double.parseDouble(item4);
               p.curry = Double.parseDouble(item5);
               p.dry = Double.parseDouble(item6);
               p.mix = Double.parseDouble(item7);
               p.spicy = Double.parseDouble(item8);
               PreparedStatement ps = conn.prepareStatement("INSERT INTO ROOT.PAYMENT (PAID, TABLE_NO, TOTAL)VALUES (?,?,?)");
               ps.setString(1, "no");
               ps.setString(2, "t3");
               ps.setDouble(3, p.getAmmount());
               if(ps.executeUpdate() > 0){
                   payment_page pp = new payment_page();
                   pp.setVisible(true);
                   dispose();
               }
            }else{
                st.executeUpdate("update my_table set active = '"+active+"', ord = '"+order+"' where table_no = 't3'");
                order_page op = new order_page();
                op.setVisible(true);
                dispose();
            }
        } catch (SQLException ex) {
            Logger.getLogger(main_page.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_t3MouseClicked

    private void t4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t4MouseClicked
        // TODO add your handling code here:
        String active = "on";
        String order = "no";
        try {
            // TODO add your handling code here:
            Connection conn = DriverManager.getConnection("jdbc:derby://localhost:1527/restaurant" , "root", "root");
            Statement st = conn.createStatement();
            if(tb4 == 1){
               ResultSet item = st.executeQuery("select * from my_table where table_no = 't4'");
               if(item.next()){
                   item1 = item.getString(3);
                   item2 = item.getString(4);
                   item3 = item.getString(5);
                   item4 = item.getString(6);
                   item5 = item.getString(7);
                   item6 = item.getString(8);
                   item7 = item.getString(9);
                   item8 = item.getString(10);
               }
               pay p = new pay();
               p.chicken = Double.parseDouble(item1);
               p.sandwish = Double.parseDouble(item2);
               p.cabbonara = Double.parseDouble(item3);
               p.beef = Double.parseDouble(item4);
               p.curry = Double.parseDouble(item5);
               p.dry = Double.parseDouble(item6);
               p.mix = Double.parseDouble(item7);
               p.spicy = Double.parseDouble(item8);
               PreparedStatement ps = conn.prepareStatement("INSERT INTO ROOT.PAYMENT (PAID, TABLE_NO, TOTAL)VALUES (?,?,?)");
               ps.setString(1, "no");
               ps.setString(2, "t4");
               ps.setDouble(3, p.getAmmount());
               if(ps.executeUpdate() > 0){
                   payment_page pp = new payment_page();
                   pp.setVisible(true);
                   dispose();
               }
            }else{
                st.executeUpdate("update my_table set active = '"+active+"', ord = '"+order+"' where table_no = 't4'");
                order_page op = new order_page();
                op.setVisible(true);
                dispose();
            }
        } catch (SQLException ex) {
            Logger.getLogger(main_page.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_t4MouseClicked

    private void t5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t5MouseClicked
        // TODO add your handling code here:
        String active = "on";
        String order = "no";
        try {
            // TODO add your handling code here:
            Connection conn = DriverManager.getConnection("jdbc:derby://localhost:1527/restaurant" , "root", "root");
            Statement st = conn.createStatement();
            if(tb5 == 1){
               ResultSet item = st.executeQuery("select * from my_table where table_no = 't5'");
               if(item.next()){
                   item1 = item.getString(3);
                   item2 = item.getString(4);
                   item3 = item.getString(5);
                   item4 = item.getString(6);
                   item5 = item.getString(7);
                   item6 = item.getString(8);
                   item7 = item.getString(9);
                   item8 = item.getString(10);
               }
               pay p = new pay();
               p.chicken = Double.parseDouble(item1);
               p.sandwish = Double.parseDouble(item2);
               p.cabbonara = Double.parseDouble(item3);
               p.beef = Double.parseDouble(item4);
               p.curry = Double.parseDouble(item5);
               p.dry = Double.parseDouble(item6);
               p.mix = Double.parseDouble(item7);
               p.spicy = Double.parseDouble(item8);
               PreparedStatement ps = conn.prepareStatement("INSERT INTO ROOT.PAYMENT (PAID, TABLE_NO, TOTAL)VALUES (?,?,?)");
               ps.setString(1, "no");
               ps.setString(2, "t5");
               ps.setDouble(3, p.getAmmount());
               if(ps.executeUpdate() > 0){
                   payment_page pp = new payment_page();
                   pp.setVisible(true);
                   dispose();
               }
            }else{
                st.executeUpdate("update my_table set active = '"+active+"', ord = '"+order+"' where table_no = 't5'");
                order_page op = new order_page();
                op.setVisible(true);
                dispose();
            }
        } catch (SQLException ex) {
            Logger.getLogger(main_page.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_t5MouseClicked

    private void t6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t6MouseClicked
        // TODO add your handling code here:
        String active = "on";
        String order = "no";
        try {
            // TODO add your handling code here:
            Connection conn = DriverManager.getConnection("jdbc:derby://localhost:1527/restaurant" , "root", "root");
            Statement st = conn.createStatement();
            if(tb6 == 1){
               ResultSet item = st.executeQuery("select * from my_table where table_no = 't6'");
               if(item.next()){
                   item1 = item.getString(3);
                   item2 = item.getString(4);
                   item3 = item.getString(5);
                   item4 = item.getString(6);
                   item5 = item.getString(7);
                   item6 = item.getString(8);
                   item7 = item.getString(9);
                   item8 = item.getString(10);
               }
               pay p = new pay();
               p.chicken = Double.parseDouble(item1);
               p.sandwish = Double.parseDouble(item2);
               p.cabbonara = Double.parseDouble(item3);
               p.beef = Double.parseDouble(item4);
               p.curry = Double.parseDouble(item5);
               p.dry = Double.parseDouble(item6);
               p.mix = Double.parseDouble(item7);
               p.spicy = Double.parseDouble(item8);
               PreparedStatement ps = conn.prepareStatement("INSERT INTO ROOT.PAYMENT (PAID, TABLE_NO, TOTAL)VALUES (?,?,?)");
               ps.setString(1, "no");
               ps.setString(2, "t6");
               ps.setDouble(3, p.getAmmount());
               if(ps.executeUpdate() > 0){
                   payment_page pp = new payment_page();
                   pp.setVisible(true);
                   dispose();
               }
            }else{
                st.executeUpdate("update my_table set active = '"+active+"', ord = '"+order+"' where table_no = 't6'");
                order_page op = new order_page();
                op.setVisible(true);
                dispose();
            }
        } catch (SQLException ex) {
            Logger.getLogger(main_page.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_t6MouseClicked

    private void t7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t7MouseClicked
        // TODO add your handling code here:
        String active = "on";
        String order = "no";
        try {
            // TODO add your handling code here:
            Connection conn = DriverManager.getConnection("jdbc:derby://localhost:1527/restaurant" , "root", "root");
            Statement st = conn.createStatement();
            if(tb7 == 1){
               ResultSet item = st.executeQuery("select * from my_table where table_no = 't7'");
               if(item.next()){
                   item1 = item.getString(3);
                   item2 = item.getString(4);
                   item3 = item.getString(5);
                   item4 = item.getString(6);
                   item5 = item.getString(7);
                   item6 = item.getString(8);
                   item7 = item.getString(9);
                   item8 = item.getString(10);
               }
               pay p = new pay();
               p.chicken = Double.parseDouble(item1);
               p.sandwish = Double.parseDouble(item2);
               p.cabbonara = Double.parseDouble(item3);
               p.beef = Double.parseDouble(item4);
               p.curry = Double.parseDouble(item5);
               p.dry = Double.parseDouble(item6);
               p.mix = Double.parseDouble(item7);
               p.spicy = Double.parseDouble(item8);
               PreparedStatement ps = conn.prepareStatement("INSERT INTO ROOT.PAYMENT (PAID, TABLE_NO, TOTAL)VALUES (?,?,?)");
               ps.setString(1, "no");
               ps.setString(2, "t7");
               ps.setDouble(3, p.getAmmount());
               if(ps.executeUpdate() > 0){
                   payment_page pp = new payment_page();
                   pp.setVisible(true);
                   dispose();
               }
            }else{
                st.executeUpdate("update my_table set active = '"+active+"', ord = '"+order+"' where table_no = 't7'");
                order_page op = new order_page();
                op.setVisible(true);
                dispose();
            }
        } catch (SQLException ex) {
            Logger.getLogger(main_page.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_t7MouseClicked

    private void t8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t8MouseClicked
        // TODO add your handling code here:
        String active = "on";
        String order = "no";
        try {
            // TODO add your handling code here:
            Connection conn = DriverManager.getConnection("jdbc:derby://localhost:1527/restaurant" , "root", "root");
            Statement st = conn.createStatement();
            if(tb8 == 1){
               ResultSet item = st.executeQuery("select * from my_table where table_no = 't8'");
               if(item.next()){
                   item1 = item.getString(3);
                   item2 = item.getString(4);
                   item3 = item.getString(5);
                   item4 = item.getString(6);
                   item5 = item.getString(7);
                   item6 = item.getString(8);
                   item7 = item.getString(9);
                   item8 = item.getString(10);
               }
               pay p = new pay();
               p.chicken = Double.parseDouble(item1);
               p.sandwish = Double.parseDouble(item2);
               p.cabbonara = Double.parseDouble(item3);
               p.beef = Double.parseDouble(item4);
               p.curry = Double.parseDouble(item5);
               p.dry = Double.parseDouble(item6);
               p.mix = Double.parseDouble(item7);
               p.spicy = Double.parseDouble(item8);
               PreparedStatement ps = conn.prepareStatement("INSERT INTO ROOT.PAYMENT (PAID, TABLE_NO, TOTAL)VALUES (?,?,?)");
               ps.setString(1, "no");
               ps.setString(2, "t8");
               ps.setDouble(3, p.getAmmount());
               if(ps.executeUpdate() > 0){
                   payment_page pp = new payment_page();
                   pp.setVisible(true);
                   dispose();
               }
            }else{
                st.executeUpdate("update my_table set active = '"+active+"', ord = '"+order+"' where table_no = 't8'");
                order_page op = new order_page();
                op.setVisible(true);
                dispose();
            }
        } catch (SQLException ex) {
            Logger.getLogger(main_page.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_t8MouseClicked

    private void t9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t9MouseClicked
        // TODO add your handling code here:
        String active = "on";
        String order = "no";
        try {
            // TODO add your handling code here:
            Connection conn = DriverManager.getConnection("jdbc:derby://localhost:1527/restaurant" , "root", "root");
            Statement st = conn.createStatement();
            if(tb9 == 1){
               ResultSet item = st.executeQuery("select * from my_table where table_no = 't9'");
               if(item.next()){
                   item1 = item.getString(3);
                   item2 = item.getString(4);
                   item3 = item.getString(5);
                   item4 = item.getString(6);
                   item5 = item.getString(7);
                   item6 = item.getString(8);
                   item7 = item.getString(9);
                   item8 = item.getString(10);
               }
               pay p = new pay();
               p.chicken = Double.parseDouble(item1);
               p.sandwish = Double.parseDouble(item2);
               p.cabbonara = Double.parseDouble(item3);
               p.beef = Double.parseDouble(item4);
               p.curry = Double.parseDouble(item5);
               p.dry = Double.parseDouble(item6);
               p.mix = Double.parseDouble(item7);
               p.spicy = Double.parseDouble(item8);
               PreparedStatement ps = conn.prepareStatement("INSERT INTO ROOT.PAYMENT (PAID, TABLE_NO, TOTAL)VALUES (?,?,?)");
               ps.setString(1, "no");
               ps.setString(2, "t9");
               ps.setDouble(3, p.getAmmount());
               if(ps.executeUpdate() > 0){
                   payment_page pp = new payment_page();
                   pp.setVisible(true);
                   dispose();
               }
            }else{
                st.executeUpdate("update my_table set active = '"+active+"', ord = '"+order+"' where table_no = 't9'");
                order_page op = new order_page();
                op.setVisible(true);
                dispose();
            }
        } catch (SQLException ex) {
            Logger.getLogger(main_page.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_t9MouseClicked

    private void t10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t10MouseClicked
        // TODO add your handling code here:
        String active = "on";
        String order = "no";
        try {
            // TODO add your handling code here:
            Connection conn = DriverManager.getConnection("jdbc:derby://localhost:1527/restaurant" , "root", "root");
            Statement st = conn.createStatement();
            if(tb10 == 1){
               ResultSet item = st.executeQuery("select * from my_table where table_no = 't10'");
               if(item.next()){
                   item1 = item.getString(3);
                   item2 = item.getString(4);
                   item3 = item.getString(5);
                   item4 = item.getString(6);
                   item5 = item.getString(7);
                   item6 = item.getString(8);
                   item7 = item.getString(9);
                   item8 = item.getString(10);
               }
               pay p = new pay();
               p.chicken = Double.parseDouble(item1);
               p.sandwish = Double.parseDouble(item2);
               p.cabbonara = Double.parseDouble(item3);
               p.beef = Double.parseDouble(item4);
               p.curry = Double.parseDouble(item5);
               p.dry = Double.parseDouble(item6);
               p.mix = Double.parseDouble(item7);
               p.spicy = Double.parseDouble(item8);
               PreparedStatement ps = conn.prepareStatement("INSERT INTO ROOT.PAYMENT (PAID, TABLE_NO, TOTAL)VALUES (?,?,?)");
               ps.setString(1, "no");
               ps.setString(2, "t10");
               ps.setDouble(3, p.getAmmount());
               if(ps.executeUpdate() > 0){
                   payment_page pp = new payment_page();
                   pp.setVisible(true);
                   dispose();
               }
            }else{
                st.executeUpdate("update my_table set active = '"+active+"', ord = '"+order+"' where table_no = 't10'");
                order_page op = new order_page();
                op.setVisible(true);
                dispose();
            }
        } catch (SQLException ex) {
            Logger.getLogger(main_page.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_t10MouseClicked

    private void t11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t11MouseClicked
        // TODO add your handling code here:
        String active = "on";
        String order = "no";
        try {
            // TODO add your handling code here:
            Connection conn = DriverManager.getConnection("jdbc:derby://localhost:1527/restaurant" , "root", "root");
            Statement st = conn.createStatement();
            if(tb11 == 1){
               ResultSet item = st.executeQuery("select * from my_table where table_no = 't11'");
               if(item.next()){
                   item1 = item.getString(3);
                   item2 = item.getString(4);
                   item3 = item.getString(5);
                   item4 = item.getString(6);
                   item5 = item.getString(7);
                   item6 = item.getString(8);
                   item7 = item.getString(9);
                   item8 = item.getString(10);
               }
               pay p = new pay();
               p.chicken = Double.parseDouble(item1);
               p.sandwish = Double.parseDouble(item2);
               p.cabbonara = Double.parseDouble(item3);
               p.beef = Double.parseDouble(item4);
               p.curry = Double.parseDouble(item5);
               p.dry = Double.parseDouble(item6);
               p.mix = Double.parseDouble(item7);
               p.spicy = Double.parseDouble(item8);
               PreparedStatement ps = conn.prepareStatement("INSERT INTO ROOT.PAYMENT (PAID, TABLE_NO, TOTAL)VALUES (?,?,?)");
               ps.setString(1, "no");
               ps.setString(2, "t11");
               ps.setDouble(3, p.getAmmount());
               if(ps.executeUpdate() > 0){
                   payment_page pp = new payment_page();
                   pp.setVisible(true);
                   dispose();
               }
            }else{
                st.executeUpdate("update my_table set active = '"+active+"', ord = '"+order+"' where table_no = 't11'");
                order_page op = new order_page();
                op.setVisible(true);
                dispose();
            }
        } catch (SQLException ex) {
            Logger.getLogger(main_page.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_t11MouseClicked

    private void t12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t12MouseClicked
        // TODO add your handling code here:
        String active = "on";
        String order = "no";
        try {
            // TODO add your handling code here:
            Connection conn = DriverManager.getConnection("jdbc:derby://localhost:1527/restaurant" , "root", "root");
            Statement st = conn.createStatement();
            if(tb12 == 1){
               ResultSet item = st.executeQuery("select * from my_table where table_no = 't12'");
               if(item.next()){
                   item1 = item.getString(3);
                   item2 = item.getString(4);
                   item3 = item.getString(5);
                   item4 = item.getString(6);
                   item5 = item.getString(7);
                   item6 = item.getString(8);
                   item7 = item.getString(9);
                   item8 = item.getString(10);
               }
               pay p = new pay();
               p.chicken = Double.parseDouble(item1);
               p.sandwish = Double.parseDouble(item2);
               p.cabbonara = Double.parseDouble(item3);
               p.beef = Double.parseDouble(item4);
               p.curry = Double.parseDouble(item5);
               p.dry = Double.parseDouble(item6);
               p.mix = Double.parseDouble(item7);
               p.spicy = Double.parseDouble(item8);
               PreparedStatement ps = conn.prepareStatement("INSERT INTO ROOT.PAYMENT (PAID, TABLE_NO, TOTAL)VALUES (?,?,?)");
               ps.setString(1, "no");
               ps.setString(2, "t12");
               ps.setDouble(3, p.getAmmount());
               if(ps.executeUpdate() > 0){
                   payment_page pp = new payment_page();
                   pp.setVisible(true);
                   dispose();
               }
            }else{
                st.executeUpdate("update my_table set active = '"+active+"', ord = '"+order+"' where table_no = 't12'");
                order_page op = new order_page();
                op.setVisible(true);
                dispose();
            }
        } catch (SQLException ex) {
            Logger.getLogger(main_page.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_t12MouseClicked

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        String ta1 = null;
        String ta2 = null;
        String ta3 = null;
        String ta4 = null;
        String ta5 = null;
        String ta6 = null;
        String ta7 = null;
        String ta8 = null;
        String ta9 = null;
        String ta10 = null;
        String ta11= null;
        String ta12 = null;
        try {
            // TODO add your handling code here:
            Connection conn = DriverManager.getConnection("jdbc:derby://localhost:1527/restaurant" , "root", "root");
            Statement st = conn.createStatement();
            ResultSet table1 = st.executeQuery("select ord from my_table where table_no = 't1'");
            if(table1.next()){
                ta1 = table1.getString(1);
            }
            ResultSet table2 = st.executeQuery("select ord from my_table where table_no = 't2'");
            if(table2.next()){
                ta2 = table2.getString(1);
            }
            ResultSet table3 = st.executeQuery("select ord from my_table where table_no = 't3'");
            if(table3.next()){
                ta3 = table3.getString(1);
            }
            ResultSet table4 = st.executeQuery("select ord from my_table where table_no = 't4'");
            if(table4.next()){
                ta4 = table4.getString(1);
            }
            ResultSet table5 = st.executeQuery("select ord from my_table where table_no = 't5'");
            if(table5.next()){
                ta5 = table5.getString(1);
            }
            ResultSet table6 = st.executeQuery("select ord from my_table where table_no = 't6'");
            if(table6.next()){
                ta6 = table6.getString(1);
            }
            ResultSet table7 = st.executeQuery("select ord from my_table where table_no = 't7'");
            if(table7.next()){
                ta7 = table7.getString(1);
            }
           ResultSet table8 = st.executeQuery("select ord from my_table where table_no = 't8'");
            if(table8.next()){
                ta8 = table8.getString(1);
            }
            ResultSet table9 = st.executeQuery("select ord from my_table where table_no = 't9'");
            if(table9.next()){
                ta9 = table9.getString(1);
            }
            ResultSet table10 = st.executeQuery("select ord from my_table where table_no = 't10'");
            if(table10.next()){
                ta10 = table10.getString(1);
            }
            ResultSet table11 = st.executeQuery("select ord from my_table where table_no = 't11'");
            if(table11.next()){
                ta11 = table11.getString(1);
            }
            ResultSet table12 = st.executeQuery("select ord from my_table where table_no = 't12'");
            if(table12.next()){
                ta12 = table12.getString(1);
            }
        } catch (SQLException ex) {
            Logger.getLogger(main_page.class.getName()).log(Level.SEVERE, null, ex);
        }
        if("yes".equals(ta1)){
            t1.setForeground(Color.green);
            tb1 = 1;
        }
        if("yes".equals(ta2)){
            t2.setForeground(Color.green);
            tb2 = 1;
        }
        if("yes".equals(ta3)){
            t3.setForeground(Color.green);
            tb3 = 1;
        }
        if("yes".equals(ta4)){
            t4.setForeground(Color.green);
            tb4 = 1;
        }
        if("yes".equals(ta5)){
            t5.setForeground(Color.green);
            tb5 = 1;
        }
        if("yes".equals(ta6)){
            t6.setForeground(Color.green);
            tb6 = 1;
        }
        if("yes".equals(ta7)){
            t7.setForeground(Color.green);
            tb7 = 1;
        }
        if("yes".equals(ta8)){
            t8.setForeground(Color.green);
            tb8 = 1;
        }
        if("yes".equals(ta9)){
            t9.setForeground(Color.green);
            tb9 = 1;
        }
        if("yes".equals(ta10)){
            t10.setForeground(Color.green);
            tb10 = 1;
        }
        if("yes".equals(ta11)){
            t11.setForeground(Color.green);
            tb11 = 1;
        }
        if("yes".equals(ta12)){
            t12.setForeground(Color.green);
            tb12 = 1;
        }
    }//GEN-LAST:event_formComponentShown

    private void checkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkActionPerformed
        // TODO add your handling code here:
        admin_page ap = new admin_page();
        ap.setVisible(true);
    }//GEN-LAST:event_checkActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main_page().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton check;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel t1;
    private javax.swing.JLabel t10;
    private javax.swing.JLabel t11;
    private javax.swing.JLabel t12;
    private javax.swing.JLabel t2;
    private javax.swing.JLabel t3;
    private javax.swing.JLabel t4;
    private javax.swing.JLabel t5;
    private javax.swing.JLabel t6;
    private javax.swing.JLabel t7;
    private javax.swing.JLabel t8;
    private javax.swing.JLabel t9;
    // End of variables declaration//GEN-END:variables
}
